<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">

        <insert id="insert" useGeneratedKeys="true" keyProperty="id">
                insert into orders (number, user_id, address_book_id, order_time, checkout_time, amount, remark, phone, address, user_name, consignee,
                                    cancel_reason, rejection_reason, cancel_time,
                                    estimated_delivery_time, delivery_time, pack_amount, tableware_number)
                VALUES
                    (
                     #{number}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{amount}, #{remark}, #{phone}, #{address},
                     #{userName}, #{consignee}, #{cancelReason}, #{rejectionReason}, #{cancelTime}, #{estimatedDeliveryTime},
                     #{deliveryTime}, #{packAmount}, #{tablewareNumber}
                    )
        </insert>
    <update id="updateStatusByIds">
        update orders
        set
        status = #{status},
        cancel_reason = #{cancelReason},
        cancel_time = #{cancelTime}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <update id="update" parameterType="com.sky.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">
                cancel_reason=#{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime}
            </if>
        </set>
        where id = #{id}
    </update>
    <select id="page" resultType="com.sky.entity.Orders">
        select * from orders
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="number != null and number != ''">
                and number like concat('%', #{number}, '%')
            </if>
            <if test="phone != null and phone != ''">
                and phone like concat('%', #{phone}, '%')
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="beginTime != null">
                and order_time = #{beginTime}
            </if>
            <if test="endTime != null">
                and delivery_time = #{endTime}
            </if>
        </where>
        order by order_time desc
    </select>
    <select id="getStatistics" resultType="com.sky.vo.OrderStatisticsVO">
        select
            sum(if(status = 2, 1, 0)) as toBeConfirmed,
            sum(if(status = 3, 1, 0)) as confirmed,
            sum(if(status = 4, 1, 0)) as deliveryInProgress
        from
            orders
    </select>
    <select id="pageUser" resultType="com.sky.dto.OrdersDTOS">
        select * from orders
        <where>
            <if test="status != null">status = #{status}</if>
        </where>
    </select>
    <select id="pageQuery" resultType="com.sky.entity.Orders">
            select * from orders
            <where>
                <if test="userId != null">user_id = #{userId}</if>
                <if test="status != null">and status = #{status}</if>
            </where>
    </select>
    <select id="sumBymap" resultType="java.lang.Double">
        select sum(orders.amount) from orders
        <where>
            <if test="begin != null">order_time &gt; #{begin}</if>
            <if test="end !=null">and order_time &lt; #{end}</if>
            <if test="status != null">and status = #{status}</if>
        </where>
    </select>
    <select id="conutgetTime" resultType="com.sky.dto.DailyTurnoverDTO">
        select 
            DATE(order_time) as today
            , sum(amount) as turnover
        from orders
        where order_time &gt;= #{beginTime}
          and order_time &lt;= #{endTime}
          and status = 5
        group by DATE(order_time)
        order by today
    </select>
    <select id="getOrderStatistcs" resultType="com.sky.dto.OrderNumbersDTO">
        select
        DATE (order_time) as date,
        count(*) as orderNumber,
        sum(if(status = 5, 1, 0)) as validOrderNumber
        from orders
        where order_time &gt;= #{beginTime} and order_time &lt;= #{endTime}
        group by DATE(order_time)
        order by date
    </select>
</mapper>
